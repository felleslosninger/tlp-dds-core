@use '@digdir/ds-tokens/build/tokens.scss' as *;
@use './typography.scss' as *;
@use './baseline/utils.scss' as utils;

$classname: '#{utils.$prefix}-panel-link';
// Color variables
$link-border-color: $color-interface-interaction;
$link-hover-color: $color-interface-interaction-light;
$link-icon-color: $color-neutral-grey-700;
// Size variables
$link-size-height-medium: calc($spacing-base-10 + $border-width-default);
$link-size-height-large: calc($spacing-base-14 + $border-width-default);
$link-size-width: calc($spacing-base-8 * 10);
$link-icon-size-medium: $spacing-base-6;
$link-icon-size-large: $spacing-base-8;

$link-padding-icon-offset: $spacing-base-1;
$link-padding-left-medium: $spacing-base-4;
$link-padding-left-large: $spacing-base-6;
$link-padding-right-medium: $spacing-base-3;
$link-padding-right-large: $spacing-base-4;

.#{$classname} {
  display: flex;
  flex-direction: row;
  align-items: center;
  position: relative;

  cursor: pointer;
  text-decoration: none;
  box-sizing: border-box;
  overflow-wrap: anywhere;

  background-color: $color-neutral-white;

  border-bottom: $border-width-default solid transparent;

  // Medium size
  min-height: $link-size-height-medium;
  min-width: $link-size-width;
  max-width: calc($spacing-base-19 * 10);
  padding-left: $link-padding-left-medium;
  padding-right: $link-padding-right-medium;

  transition: all $duration-normal;
  transition-property: border-color, background-color, margin;

  // Elements
  & > &__label {
    @include text-body-300();
    color: $color-text-background-light;

    padding-right: $link-icon-size-medium;
  }
  & > svg {
    fill: $link-icon-color;

    width: $link-icon-size-medium;
    height: $link-icon-size-medium;

    flex-shrink: 0;
    flex-grow: 0;
  }
  & > svg:nth-last-of-type(2) {
    padding-right: $link-padding-left-medium;
  }
  & > svg:nth-last-of-type(1) {
    display: inline-block;
    position: absolute;
    right: $link-padding-right-medium;

    transition: right $duration-normal;
  }

  // States
  &:hover {
    border-color: $link-border-color;

    & > svg:nth-last-of-type(1) {
      right: calc($link-padding-right-medium - $spacing-base-1);
    }
  }
  &:active {
    border-color: $link-border-color;
    background-color: $link-hover-color;
  }

  // Size modifiers
  &--large {
    min-height: $link-size-height-large;
    padding-left: $link-padding-left-large;
    padding-right: $link-padding-right-large;
    & > svg:nth-last-of-type(1) {
      right: $link-padding-right-large;
    }

    &.#{$classname}--icon-left {
      padding-left: $link-padding-left-medium;
    }

    &:hover > svg:nth-last-of-type(1) {
      right: calc($link-padding-right-large - $spacing-base-1);
    }

    & > .#{$classname}__label {
      @include text-body-400();
    }

    & > svg {
      width: $link-icon-size-large;
      height: $link-icon-size-large;
    }
  }

  // Breakpoints
  @media (max-width: $breakpoint-medium) {
    min-width: Min(90vw, $link-size-width);
  }
}
