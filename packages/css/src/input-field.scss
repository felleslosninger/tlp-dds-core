@use '@digdir/ds-tokens/build/tokens.scss' as *;
@use './typography.scss' as *;
@use './baseline/utils.scss' as utils;
@use './form.scss' as form;

$classname: '#{utils.$prefix}-input-field';
// Color variables
$color-default-grey: $color-neutral-grey-600;
$color-active-grey: $color-neutral-grey-800;
$color-interaction: $color-interface-interaction;
$color-disabled-grey: $color-neutral-grey-500;
$color-error-grey: $color-neutral-grey-700;
// Size variables
$min-width: calc($spacing-base-8 * 10);
$height-medium: $spacing-base-12;
$height-large: $spacing-base-14;
$icon-size-medium: $spacing-base-5;
$icon-size-large: $spacing-base-8;
// Padding sizes
$padding-icon-medium: utils.pxToRem(6px);
$padding-icon-large: utils.pxToRem(10px);
$padding-placeholder-horizontal-medium: $spacing-base-4;
$padding-placeholder-horizontal-large: $spacing-base-5;
$padding-placeholder-horizontal-icon-medium: calc(
  $icon-size-medium + $padding-icon-medium * 2
);
$padding-placeholder-horizontal-icon-large: calc(
  $icon-size-large + $padding-icon-large * 2
);

.#{$classname} {
  display: flex;
  flex-direction: row;
  align-items: center;
  position: relative;

  // Size medium
  min-width: Min($min-width, 100%);
  max-width: utils.$component-max-width;
  height: $height-medium;

  // Elements
  &__input {
    margin: 0;
    width: 100%;
    height: 100%;

    @include text-body-300();

    background-color: $color-neutral-white;
    color: $color-text-background-light;
    padding: 0 $padding-placeholder-horizontal-medium;

    box-sizing: border-box;
    border-radius: $border-radius-x-small;
    border: $border-width-thin solid $color-default-grey;

    transition: all $duration-normal;
    transition-property: border, box-shadow;

    &::placeholder {
      color: $color-default-grey;
    }

    &:focus {
      outline: none;
      border-color: $color-interaction;
      box-shadow: inset 0 0 0 $border-width-thin $color-interaction;
    }
  }

  & ~ .#{form.$field-label-classname} {
    cursor: text;
    width: fit-content;
  }

  &__icon-left,
  &__icon-right {
    pointer-events: none;
    position: absolute;
  }
  &__icon-left svg,
  &__icon-right svg {
    display: block;
    flex-shrink: 0;
    flex-grow: 0;

    // Size medium
    width: $icon-size-medium;
    height: $icon-size-medium;

    fill: $color-default-grey;
    transition: all $duration-normal;
  }
  &__icon-left {
    left: $padding-icon-medium;
  }
  &__icon-right {
    right: $padding-icon-medium;
  }

  // Set extra padding when icon is used
  &--icon-left > &__input {
    padding-left: $padding-placeholder-horizontal-icon-medium;
  }
  &--error &__input,
  &--icon-right > &__input {
    padding-right: $padding-placeholder-horizontal-icon-medium;
  }

  // State modifiers of non-disabled states
  &:not([class*='#{$classname}--disabled']) > input.#{$classname}__input {
    &:hover {
      cursor: text;
    }
    &:hover:not(:focus) {
      border-color: $color-interaction;
      & ~ .#{$classname}__icon-left svg,
      & ~ .#{$classname}__icon-right svg {
        fill: $color-active-grey;
      }
    }
    &:focus {
      & ~ .#{$classname}__icon-left svg,
      & ~ .#{$classname}__icon-right svg {
        fill: $color-active-grey;
      }
      &::placeholder {
        opacity: 0;
      }
    }
  }

  &--disabled {
    & .#{$classname}__icon-left svg,
    & .#{$classname}__icon-right svg {
      fill: $color-disabled-grey;
    }
    & ~ .#{form.$field-label-classname} {
      cursor: not-allowed;
      color: $color-disabled-grey;
    }
    & > input.#{$classname}__input {
      cursor: not-allowed;
      color: $color-disabled-grey;
      &:not(:focus) {
        border-color: $color-disabled-grey;
      }
      &::placeholder {
        color: $color-disabled-grey;
      }
    }
  }

  &--error {
    &:not([class*='#{$classname}--disabled'])
      .#{$classname}__input:not(:hover):not(:focus) {
      border-color: $color-interface-error;
      box-shadow: inset 0 0 0 $border-width-thin $color-interface-error;
    }
    & .#{$classname}__icon-left svg {
      fill: $color-error-grey;
    }
    // Error icon
    &::after {
      pointer-events: none;
      position: absolute;
      content: '';
      background-color: $color-neutral-white;
      background-image: utils.$icon-url-error;
      background-repeat: no-repeat;

      background-size: $icon-size-medium, $icon-size-medium;
      width: $icon-size-medium;
      height: $icon-size-medium;

      right: $padding-icon-medium;
    }
  }

  // Size modifiers
  &--large {
    height: $height-large;

    & .#{$classname}__input {
      @include text-body-400();
      padding: 0 $padding-placeholder-horizontal-large;
    }
    // Set icon size
    &::after,
    & .#{$classname}__icon-left svg,
    & .#{$classname}__icon-right svg {
      width: $icon-size-large;
      height: $icon-size-large;
    }
    &::after {
      background-size: $icon-size-large, $icon-size-large;
    }
    // Set icon padding
    & .#{$classname}__icon-left {
      left: $padding-icon-large;
    }
    &::after,
    & .#{$classname}__icon-right {
      right: $padding-icon-large;
    }
    // Set input field padding to large icon
    &.#{$classname}--icon-left .#{$classname}__input {
      padding-left: $padding-placeholder-horizontal-icon-large;
    }
    &.#{$classname}--error .#{$classname}__input,
    &.#{$classname}--icon-right .#{$classname}__input {
      padding-right: $padding-placeholder-horizontal-icon-large;
    }
  }
}
