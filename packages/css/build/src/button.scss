@use '@digdir/ds-tokens/build/tokens.scss' as *;
@use './typography.scss' as *;
@use './baseline/utils.scss' as utils;

$classname: '#{utils.$prefix}-button';

@mixin hover {
  background-color: $color-interface-interaction-light;
  color: $color-neutral-grey-800;
  border: $border-width-default solid $color-neutral-grey-800;
  cursor: pointer;
}

@mixin active($bg-color) {
  background-color: $bg-color;
  color: $color-neutral-white;
}

@mixin disabled($bg-color, $text-color, $border-color: transparent) {
  background-color: $bg-color;
  color: $text-color;
  border-color: $border-color;
  cursor: not-allowed;
}

@mixin size($height, $border-radius, $horizontal-padding) {
  min-height: $height;
  min-width: $height * 2;
  max-width: $height * 12;
  border-radius: $border-radius;
  padding: 0 $horizontal-padding;
}

.#{$classname} {
  box-sizing: border-box;
  display: inline-flex;
  align-items: center;
  transition: all $duration-normal;
  transition-property: background-color, border-color, color;
  overflow: hidden;

  // Size medium
  @include size($spacing-base-10, $border-radius-large, $spacing-base-6);
  @include text-interface-400();

  // Primary
  background-color: $color-neutral-grey-800;
  color: $color-neutral-white;
  border: $border-width-default solid transparent;

  // Elements
  & > svg {
    fill: $color-neutral-white;
    box-sizing: border-box;

    display: inline-block;
    flex-shrink: 0;
    flex-grow: 0;

    text-align: end;

    height: $spacing-base-6;
    width: $spacing-base-6;
    transition: inherit;
  }
  & > svg.#{$classname}__icon-left {
    margin-right: $spacing-base-2;
  }
  & > svg.#{$classname}__icon-right {
    margin-left: $spacing-base-2;
  }

  // Size modifiers
  &--x-small {
    @include size($spacing-base-6, $border-radius-large, $spacing-base-4);
    @include text-interface-200();
  }
  &--small {
    @include size($spacing-base-8, $border-radius-large, $spacing-base-4);
    @include text-interface-300();
  }
  &--large {
    @include size($spacing-base-12, $border-radius-large, $spacing-base-8);
    @include text-interface-400();
  }
  &--x-large {
    @include size($spacing-base-14, $border-radius-x-large, $spacing-base-10);
    @include text-interface-400();
  }

  // Variant modifiers
  &:not([class*='#{$classname}--disabled']) {
    &:hover {
      @include hover();

      & svg {
        fill: $color-neutral-grey-800;
      }
    }
    &:active {
      @include active($color-neutral-grey-900);

      & svg {
        fill: $color-neutral-white;
      }
    }
  }
  &--disabled {
    @include disabled($color-neutral-grey-500, $color-neutral-white);

    & > svg {
      fill: $color-neutral-white;
    }
  }

  &--secondary {
    background-color: $color-neutral-white;
    color: $color-neutral-grey-800;
    border: $border-width-default solid $color-neutral-grey-800;

    &:not([class*='#{$classname}--disabled']) {
      &:active {
        @include active($color-neutral-grey-800);
      }
      & > svg {
        fill: $color-neutral-grey-800;
      }
    }
    &.#{$classname}--disabled {
      @include disabled(
        $color-neutral-white,
        $color-neutral-grey-500,
        $color-neutral-grey-500
      );
      & > svg {
        fill: $color-neutral-grey-500;
      }
    }
  }
}
